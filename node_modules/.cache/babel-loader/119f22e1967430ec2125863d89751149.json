{"ast":null,"code":"import React,{useEffect}from'react';import{setProfileThunkCreator}from\"../../redux/ProfileReducer\";import Profile from\"./Profile\";import{useDispatch,useSelector}from\"react-redux\";import{useRouteMatch}from'react-router-dom';import{withAuthRedirect}from\"../../hoc/withAuthRedirect\";import{compose}from\"redux\";export default(function(){var state=useSelector(function(state){return state;});var dispatch=useDispatch();var userId=useRouteMatch().params.userId;if(!userId&&state.auth.isAuth){userId=state.auth.userId;}useEffect(function(){if(userId){dispatch(setProfileThunkCreator(userId));}},[userId]);// HOC\n// return compose(withAuthRedirect)(<Profile addPost={addPost} posts={state.profile.posts} profile={state.profile.profile} isAuth={state.auth.isAuth}/>)\nreturn/*#__PURE__*/React.createElement(Profile,{profile:state.profile.profile,isAuth:state.auth.isAuth,currentLoggedId:state.auth.userId});});","map":{"version":3,"sources":["/var/www/js/github-search/src/Components/Profile/ProfileContainer.js"],"names":["React","useEffect","setProfileThunkCreator","Profile","useDispatch","useSelector","useRouteMatch","withAuthRedirect","compose","state","dispatch","userId","params","auth","isAuth","profile"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,sBAAR,KAAqC,4BAArC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,OAAQC,gBAAR,KAA+B,4BAA/B,CACA,OAAQC,OAAR,KAAsB,OAAtB,CAEA,eAAe,UAAM,CACjB,GAAMC,CAAAA,KAAK,CAAGJ,WAAW,CAAC,SAAAI,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CAAzB,CACA,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,GAAIO,CAAAA,MAAM,CAAIL,aAAa,GAAGM,MAAhB,CAAuBD,MAArC,CACA,GAAI,CAACA,MAAD,EAAWF,KAAK,CAACI,IAAN,CAAWC,MAA1B,CAAkC,CAC9BH,MAAM,CAAGF,KAAK,CAACI,IAAN,CAAWF,MAApB,CACH,CAEDV,SAAS,CAAC,UAAM,CACZ,GAAIU,MAAJ,CAAY,CACRD,QAAQ,CAACR,sBAAsB,CAACS,MAAD,CAAvB,CAAR,CACH,CACJ,CAJQ,CAIN,CAACA,MAAD,CAJM,CAAT,CAMA;AACA;AAEA,mBAAO,oBAAC,OAAD,EAAS,OAAO,CAAEF,KAAK,CAACM,OAAN,CAAcA,OAAhC,CAAyC,MAAM,CAAEN,KAAK,CAACI,IAAN,CAAWC,MAA5D,CAAoE,eAAe,CAAEL,KAAK,CAACI,IAAN,CAAWF,MAAhG,EAAP,CACH,CAlBD","sourcesContent":["import React, {useEffect} from 'react';\nimport {setProfileThunkCreator} from \"../../redux/ProfileReducer\";\nimport Profile from \"./Profile\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { useRouteMatch } from 'react-router-dom'\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nexport default () => {\n    const state = useSelector(state => state)\n    const dispatch = useDispatch()\n    let userId  = useRouteMatch().params.userId\n    if (!userId && state.auth.isAuth) {\n        userId = state.auth.userId;\n    }\n\n    useEffect(() => {\n        if (userId) {\n            dispatch(setProfileThunkCreator(userId))\n        }\n    }, [userId])\n\n    // HOC\n    // return compose(withAuthRedirect)(<Profile addPost={addPost} posts={state.profile.posts} profile={state.profile.profile} isAuth={state.auth.isAuth}/>)\n\n    return <Profile profile={state.profile.profile} isAuth={state.auth.isAuth} currentLoggedId={state.auth.userId}/>\n}"]},"metadata":{},"sourceType":"module"}