{"ast":null,"code":"var _jsxFileName = \"/var/www/js/github-search/src/Components/Profile/ProfileContainer.js\";\nimport React, { useEffect } from 'react';\nimport { setProfileThunkCreator } from \"../../redux/ProfileReducer\";\nimport Profile from \"./Profile\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouteMatch } from 'react-router-dom';\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nexport default (() => {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  let userId = useRouteMatch().params.userId;\n\n  if (!userId && state.auth.isAuth) {\n    userId = state.auth.userId;\n  }\n\n  useEffect(() => {\n    if (userId) {\n      dispatch(setProfileThunkCreator(userId));\n    }\n  }, [userId]); // HOC\n  // return compose(withAuthRedirect)(<Profile addPost={addPost} posts={state.profile.posts} profile={state.profile.profile} isAuth={state.auth.isAuth}/>)\n\n  return /*#__PURE__*/React.createElement(Profile, {\n    profile: state.profile.profile,\n    isAuth: state.auth.isAuth,\n    currentLoggedId: state.auth.userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  });\n});","map":{"version":3,"sources":["/var/www/js/github-search/src/Components/Profile/ProfileContainer.js"],"names":["React","useEffect","setProfileThunkCreator","Profile","useDispatch","useSelector","useRouteMatch","withAuthRedirect","compose","state","dispatch","userId","params","auth","isAuth","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,sBAAR,QAAqC,4BAArC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AAEA,gBAAe,MAAM;AACjB,QAAMC,KAAK,GAAGJ,WAAW,CAACI,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAIO,MAAM,GAAIL,aAAa,GAAGM,MAAhB,CAAuBD,MAArC;;AACA,MAAI,CAACA,MAAD,IAAWF,KAAK,CAACI,IAAN,CAAWC,MAA1B,EAAkC;AAC9BH,IAAAA,MAAM,GAAGF,KAAK,CAACI,IAAN,CAAWF,MAApB;AACH;;AAEDV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,MAAJ,EAAY;AACRD,MAAAA,QAAQ,CAACR,sBAAsB,CAACS,MAAD,CAAvB,CAAR;AACH;AACJ,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT,CARiB,CAcjB;AACA;;AAEA,sBAAO,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEF,KAAK,CAACM,OAAN,CAAcA,OAAhC;AAAyC,IAAA,MAAM,EAAEN,KAAK,CAACI,IAAN,CAAWC,MAA5D;AAAoE,IAAA,eAAe,EAAEL,KAAK,CAACI,IAAN,CAAWF,MAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAlBD","sourcesContent":["import React, {useEffect} from 'react';\nimport {setProfileThunkCreator} from \"../../redux/ProfileReducer\";\nimport Profile from \"./Profile\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { useRouteMatch } from 'react-router-dom'\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nexport default () => {\n    const state = useSelector(state => state)\n    const dispatch = useDispatch()\n    let userId  = useRouteMatch().params.userId\n    if (!userId && state.auth.isAuth) {\n        userId = state.auth.userId;\n    }\n\n    useEffect(() => {\n        if (userId) {\n            dispatch(setProfileThunkCreator(userId))\n        }\n    }, [userId])\n\n    // HOC\n    // return compose(withAuthRedirect)(<Profile addPost={addPost} posts={state.profile.posts} profile={state.profile.profile} isAuth={state.auth.isAuth}/>)\n\n    return <Profile profile={state.profile.profile} isAuth={state.auth.isAuth} currentLoggedId={state.auth.userId}/>\n}"]},"metadata":{},"sourceType":"module"}