{"ast":null,"code":"import { getAuth } from \"../api/api\";\nimport { toggleFollowingProgressActionCreator, toggleIsFetchingActionCreator } from \"./UsersReducer\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialStorage = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state = initialStorage, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.data,\n        isAuth: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserDataActionCreator = (userId, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    email,\n    login\n  }\n});\nexport const setAuthThunkCreator = () => {\n  return dispatch => {\n    dispatch(toggleIsFetchingActionCreator(true));\n    getAuth().then(data => {\n      let {\n        id,\n        login,\n        email\n      } = data;\n\n      if (id) {\n        dispatch(setUserDataActionCreator(id, email, login));\n        dispatch(toggleIsFetchingActionCreator(false));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["/var/www/js/github-search/src/redux/AuthReducer.js"],"names":["getAuth","toggleFollowingProgressActionCreator","toggleIsFetchingActionCreator","SET_USER_DATA","initialStorage","userId","email","login","isAuth","authReducer","state","action","type","data","setUserDataActionCreator","setAuthThunkCreator","dispatch","then","id"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AACA,SAAQC,oCAAR,EAA8CC,6BAA9C,QAAkF,gBAAlF;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAE,IADS;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,MAAM,EAAE;AAJS,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,cAAT,EAAyBO,MAAzB,KAAoC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEH,WAAGC,MAAM,CAACE,IAFP;AAGHL,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAKJ;AACI,aAAOE,KAAP;AARR;AAWH,CAZD;;AAcA,OAAO,MAAMI,wBAAwB,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,MAA2B;AAACK,EAAAA,IAAI,EAAET,aAAP;AAAsBU,EAAAA,IAAI,EAAE;AAACR,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB;AAA5B,CAA3B,CAAjC;AAEP,OAAO,MAAMQ,mBAAmB,GAAG,MAAM;AACrC,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACd,6BAA6B,CAAC,IAAD,CAA9B,CAAR;AACAF,IAAAA,OAAO,GAAGiB,IAAV,CAAgBJ,IAAD,IAAU;AACrB,UAAI;AAACK,QAAAA,EAAD;AAAKX,QAAAA,KAAL;AAAYD,QAAAA;AAAZ,UAAqBO,IAAzB;;AACA,UAAIK,EAAJ,EAAQ;AACJF,QAAAA,QAAQ,CAACF,wBAAwB,CAACI,EAAD,EAAKZ,KAAL,EAAYC,KAAZ,CAAzB,CAAR;AACAS,QAAAA,QAAQ,CAACd,6BAA6B,CAAC,KAAD,CAA9B,CAAR;AACH;AACJ,KAND;AAOH,GATD;AAUH,CAXM;AAaP,eAAeO,WAAf","sourcesContent":["import {getAuth} from \"../api/api\";\nimport {toggleFollowingProgressActionCreator, toggleIsFetchingActionCreator} from \"./UsersReducer\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nlet initialStorage = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialStorage, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            }\n        default:\n            return state;\n    }\n\n};\n\nexport const setUserDataActionCreator = (userId, email, login) => ({type: SET_USER_DATA, data: {userId, email, login}})\n\nexport const setAuthThunkCreator = () => {\n    return (dispatch) => {\n        dispatch(toggleIsFetchingActionCreator(true))\n        getAuth().then((data) => {\n            let {id, login, email} = data\n            if (id) {\n                dispatch(setUserDataActionCreator(id, email, login))\n                dispatch(toggleIsFetchingActionCreator(false))\n            }\n        })\n    }\n}\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}