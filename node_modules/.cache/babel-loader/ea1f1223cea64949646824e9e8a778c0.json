{"ast":null,"code":"var _jsxFileName = \"/var/www/js/github-search/src/Components/Header/HeaderContainer.js\";\nimport React from 'react';\nimport Header from \"./Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAuthThunkCreator } from \"../../redux/AuthReducer\";\nexport default (() => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(state => state.auth.isAuth);\n  const login = useSelector(state => state.auth.login);\n\n  const setAuth = () => dispatch(setAuthThunkCreator());\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    isAuth: isAuth,\n    login: login,\n    setAuth: setAuth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }));\n});","map":{"version":3,"sources":["/var/www/js/github-search/src/Components/Header/HeaderContainer.js"],"names":["React","Header","useDispatch","useSelector","setAuthThunkCreator","dispatch","isAuth","state","auth","login","setAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,mBAAR,QAAkC,yBAAlC;AAEA,gBAAe,MAAM;AACjB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,MAAM,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,MAArB,CAA1B;AACA,QAAMG,KAAK,GAAGN,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArB,CAAzB;;AACA,QAAMC,OAAO,GAAG,MAAML,QAAQ,CAACD,mBAAmB,EAApB,CAA9B;;AAEA,sBACI,uDACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEE,MAAhB;AAAwB,IAAA,KAAK,EAAEG,KAA/B;AAAsC,IAAA,OAAO,EAAEC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAXD","sourcesContent":["import React from 'react'\nimport Header from \"./Header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setAuthThunkCreator} from \"../../redux/AuthReducer\";\n\nexport default () => {\n    const dispatch = useDispatch()\n    const isAuth = useSelector(state => state.auth.isAuth)\n    const login = useSelector(state => state.auth.login)\n    const setAuth = () => dispatch(setAuthThunkCreator())\n\n    return (\n        <>\n            <Header isAuth={isAuth} login={login} setAuth={setAuth}/>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}