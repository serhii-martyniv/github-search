{"ast":null,"code":"import { checkIfFollows, followUser, getUserFollowers, getUserFollowing, getUsers, searchUser, unfollowUser } from \"../api/api\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nconst SET_USER_FOLLOWERS = 'SET_USER_FOLLOWERS';\nconst SET_USER_FOLLOWINGS = 'SET_USER_FOLLOWINGS';\nlet initialStorage = {\n  users: [],\n  // pagination\n  pageSize: 10,\n  totalUsersCount: 100,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst usersReducer = (storage = initialStorage, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...storage,\n        users: storage.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...storage,\n        users: storage.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USER_FOLLOWERS:\n      return { ...storage,\n        users: storage.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followers: action.followers\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USER_FOLLOWINGS:\n      return { ...storage,\n        users: storage.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              following: action.following\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...storage,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...storage,\n        currentPage: action.page\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...storage,\n        totalUsersCount: action.totalUsersCount\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...storage,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return { ...storage,\n        followingInProgress: action.followingInProgress ? [...storage.followingInProgress, action.userId] : storage.followingInProgress.filter(id => id !== action.userId)\n      };\n\n    default:\n      return storage;\n  }\n};\n\nexport const followActionCreator = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const setUserFollowersActionCreator = (userId, followers) => ({\n  type: SET_USER_FOLLOWERS,\n  userId: userId,\n  followers: followers\n});\nexport const setUserFollowingsActionCreator = (userId, following) => ({\n  type: SET_USER_FOLLOWINGS,\n  userId: userId,\n  following: following\n});\nexport const unfollowActionCreator = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersActionCreator = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPageActionCreator = page => ({\n  type: SET_CURRENT_PAGE,\n  page\n});\nexport const setTotalUsersCountActionCreator = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n});\nexport const toggleIsFetchingActionCreator = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgressActionCreator = (followingInProgress, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  followingInProgress,\n  userId\n});\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(toggleIsFetchingActionCreator(true));\n    getUsers(currentPage, pageSize).then(data => {\n      dispatch(setUsersActionCreator(data));\n      console.log(data);\n      data.forEach(item => {\n        // Get User Followers and set to the state\n        dispatch(getUserFollowersThunkCreator(item.login, item.id)); // Get User Followings and set to the state\n\n        dispatch(getUserFollowingThunkCreator(item.login, item.id));\n        dispatch(toggleIsFetchingActionCreator(false)); // Check if user follows current authorized user\n\n        checkIfFollows(item.login).then(data => {\n          if (data.ok) {\n            dispatch(followActionCreator(item.id));\n          } else {\n            dispatch(unfollowActionCreator(item.id));\n          }\n        });\n      });\n    });\n  };\n};\nexport const getUserFollowersThunkCreator = (login, id) => {\n  return dispatch => {\n    dispatch(toggleIsFetchingActionCreator(true));\n    getUserFollowers(login).then(data => {\n      if (data) {\n        dispatch(setUserFollowersActionCreator(id, data.length));\n      }\n\n      dispatch(toggleIsFetchingActionCreator(false));\n    });\n  };\n};\nexport const searchUserThunkCreator = username => {\n  return dispatch => {\n    dispatch(toggleIsFetchingActionCreator(true));\n\n    if (username) {\n      searchUser(username).then(data => {\n        if (data) {\n          dispatch(toggleIsFetchingActionCreator(false));\n          dispatch(setUsersActionCreator(data));\n        }\n      });\n    } else {\n      dispatch(getUsersThunkCreator());\n    }\n  };\n};\nexport const getUserFollowingThunkCreator = (login, id) => {\n  return dispatch => {\n    dispatch(toggleIsFetchingActionCreator(true));\n    getUserFollowing(login).then(data => {\n      if (data) {\n        dispatch(setUserFollowingsActionCreator(id, data.length));\n      }\n\n      dispatch(toggleIsFetchingActionCreator(false));\n    });\n  };\n};\nexport const followUserThunkCreator = (login, id) => {\n  return dispatch => {\n    dispatch(toggleFollowingProgressActionCreator(true, id));\n    followUser(login).then(data => {\n      if (data.ok) {\n        dispatch(followActionCreator(id));\n      }\n\n      dispatch(toggleFollowingProgressActionCreator(false, id));\n    });\n  };\n};\nexport const unfollowUserThunkCreator = (login, id) => {\n  return dispatch => {\n    dispatch(toggleFollowingProgressActionCreator(true, id));\n    unfollowUser(login).then(data => {\n      if (data.ok) {\n        dispatch(unfollowActionCreator(id));\n      }\n\n      dispatch(toggleFollowingProgressActionCreator(false, id));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/var/www/js/github-search/src/redux/UsersReducer.js"],"names":["checkIfFollows","followUser","getUserFollowers","getUserFollowing","getUsers","searchUser","unfollowUser","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","SET_USER_FOLLOWERS","SET_USER_FOLLOWINGS","initialStorage","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","storage","action","type","map","u","id","userId","followed","followers","following","page","filter","followActionCreator","setUserFollowersActionCreator","setUserFollowingsActionCreator","unfollowActionCreator","setUsersActionCreator","setCurrentPageActionCreator","setTotalUsersCountActionCreator","toggleIsFetchingActionCreator","toggleFollowingProgressActionCreator","getUsersThunkCreator","dispatch","then","data","console","log","forEach","item","getUserFollowersThunkCreator","login","getUserFollowingThunkCreator","ok","length","searchUserThunkCreator","username","followUserThunkCreator","unfollowUserThunkCreator"],"mappings":"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","sourcesContent":["import {\n    checkIfFollows,\n    followUser,\n    getUserFollowers,\n    getUserFollowing,\n    getUsers,\n    searchUser,\n    unfollowUser\n} from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nconst SET_USER_FOLLOWERS = 'SET_USER_FOLLOWERS';\nconst SET_USER_FOLLOWINGS = 'SET_USER_FOLLOWINGS';\n\nlet initialStorage = {\n    users: [],\n    // pagination\n    pageSize: 10,\n    totalUsersCount: 100,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n};\n\nconst usersReducer = (storage = initialStorage, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...storage,\n                users: storage.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...storage,\n                users: storage.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n        case SET_USER_FOLLOWERS:\n            return {\n                ...storage,\n                users: storage.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followers: action.followers}\n                    }\n                    return u\n                })\n            }\n        case SET_USER_FOLLOWINGS:\n            return {\n                ...storage,\n                users: storage.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, following: action.following}\n                    }\n                    return u\n                })\n            }\n        case SET_USERS:\n            return {...storage, users: action.users}\n        case SET_CURRENT_PAGE:\n            return {...storage, currentPage: action.page}\n        case SET_TOTAL_USERS_COUNT:\n            return {...storage, totalUsersCount: action.totalUsersCount}\n        case TOGGLE_IS_FETCHING:\n            return {...storage, isFetching: action.isFetching}\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {...storage, followingInProgress: action.followingInProgress\n                    ? [...storage.followingInProgress, action.userId]\n                    : storage.followingInProgress.filter(id => id!==action.userId)\n            }\n        default:\n            return storage;\n    }\n\n};\n\nexport const followActionCreator = (userId) => ({type: FOLLOW, userId})\nexport const setUserFollowersActionCreator = (userId, followers) => ({type: SET_USER_FOLLOWERS, userId: userId, followers: followers})\nexport const setUserFollowingsActionCreator = (userId, following) => ({type: SET_USER_FOLLOWINGS, userId: userId, following: following})\nexport const unfollowActionCreator = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsersActionCreator = (users) => ({type: SET_USERS, users})\nexport const setCurrentPageActionCreator = (page) => ({type: SET_CURRENT_PAGE, page})\nexport const setTotalUsersCountActionCreator = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount})\nexport const toggleIsFetchingActionCreator = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgressActionCreator = (followingInProgress, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress, userId})\n\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\n   return (dispatch) => {\n       dispatch(toggleIsFetchingActionCreator(true))\n       getUsers(currentPage, pageSize).then((data) => {\n           dispatch(setUsersActionCreator(data))\n           console.log(data)\n           data.forEach((item) => {\n               // Get User Followers and set to the state\n               dispatch(getUserFollowersThunkCreator(item.login, item.id))\n               // Get User Followings and set to the state\n               dispatch(getUserFollowingThunkCreator(item.login, item.id))\n\n               dispatch(toggleIsFetchingActionCreator(false))\n               // Check if user follows current authorized user\n               checkIfFollows(item.login).then((data) => {\n                   if (data.ok) {\n                       dispatch(followActionCreator(item.id))\n                   }\n                   else {\n                       dispatch(unfollowActionCreator(item.id))\n                   }\n               })\n           })\n       })\n    }\n}\n\nexport const getUserFollowersThunkCreator = (login, id) => {\n    return (dispatch) => {\n        dispatch(toggleIsFetchingActionCreator(true))\n        getUserFollowers(login).then(data => {\n            if (data) {\n                dispatch(setUserFollowersActionCreator(id, data.length))\n            }\n            dispatch(toggleIsFetchingActionCreator(false))\n        })\n    }\n}\n\nexport const searchUserThunkCreator = (username) => {\n    return (dispatch) => {\n        dispatch(toggleIsFetchingActionCreator(true))\n        if (username) {\n            searchUser(username).then((data) => {\n                if(data) {\n                    dispatch(toggleIsFetchingActionCreator(false))\n                    dispatch(setUsersActionCreator(data))\n                }\n            })\n        }\n        else {\n            dispatch(getUsersThunkCreator())\n        }\n\n    }\n}\n\nexport const getUserFollowingThunkCreator = (login, id) => {\n    return (dispatch) => {\n        dispatch(toggleIsFetchingActionCreator(true))\n        getUserFollowing(login).then(data => {\n            if (data) {\n                dispatch(setUserFollowingsActionCreator(id, data.length))\n            }\n            dispatch(toggleIsFetchingActionCreator(false))\n        })\n    }\n}\n\nexport const followUserThunkCreator = (login, id) => {\n    return (dispatch) => {\n        dispatch(toggleFollowingProgressActionCreator(true, id))\n        followUser(login).then(data => {\n            if (data.ok) {\n                dispatch(followActionCreator(id))\n            }\n            dispatch(toggleFollowingProgressActionCreator(false, id))\n        })\n    }\n}\n\nexport const unfollowUserThunkCreator = (login, id) => {\n    return (dispatch) => {\n        dispatch(toggleFollowingProgressActionCreator(true, id))\n        unfollowUser(login).then(data => {\n            if (data.ok) {\n                dispatch(unfollowActionCreator(id))\n            }\n            dispatch(toggleFollowingProgressActionCreator(false, id))\n        })\n    }\n}\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}